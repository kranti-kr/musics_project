/*	Question Set 1 - Easy */

/* Q1: Who is the senior most employee based on job title? */

use music_database

select top 1 *  from employee
order by levels desc

/* Q2: Which countries have the most Invoices? */

select top 1 billing_country , COUNT(customer_id) from invoice
group by billing_country
order by COUNT(customer_id) desc

/* Q3: What are top 3 values of total invoice? */

select top 3 invoice_id , total from invoice
order by total desc ;

/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

select top 1 billing_city , SUM(total) as totals from invoice
group by billing_city
order by SUM(total) desc ;

/* Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/

select top 1 c.customer_id  , c.first_name as best_customer , 
sum(i.total) as total_spending from customer c
inner join invoice i
on c.customer_id = i.customer_id
group by c.customer_id , c.first_name
order by sum(i.total) desc

/* Question Set 2 - Moderate */

/* Q1: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */

/*Method 1 */
select distinct c.email , c.first_name ,c.last_name ,g.name as genre from customer c
join invoice i
on c.customer_id = i.customer_id 
join invoice_line il 
on i.invoice_id = il.invoice_id
join track t 
on il.track_id = t.track_id 
join genre g 
on t.genre_id = g.genre_id
where g.genre_id = 1
order by c.email 

/* Q2: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */

select top 10 a.artist_id , a.name , count(t.track_id) total_songs from artist a 
join album al
on a.artist_id = al.artist_id
join track t
on al.album_id = t.album_id
join genre g
on t.genre_id = g.genre_id
where g.genre_id = 1
group by a.artist_id , a.name
order by total_songs desc

/* Q3: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */

select t.name , t.milliseconds from track t 
where t.milliseconds > (select AVG(track.milliseconds) from track)
order by t.milliseconds desc


/* Question Set 3 - Advance */

/* Q1: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent */

/* Steps to Solve: First, find which artist has earned the most according to the InvoiceLines. Now use this artist to find 
which customer spent the most on this artist. For this query, you will need to use the Invoice, InvoiceLine, Track, Customer, 
Album, and Artist tables. Note, this one is tricky because the Total spent in the Invoice table might not be on a single product, 
so you need to use the InvoiceLine table to find out how many of each product was purchased, and then multiply this by the price
for each artist. */

with best_selling_artist as (select top 1 a.artist_id ,a.name ,SUM(il.unit_price*il.quantity) as total_earning
from invoice_line il
join track t
on il.track_id = t.track_id
join album al
on t.album_id = al.album_id
join artist a
on al.artist_id = a.artist_id
group by a.artist_id , a.name
order by total_earning  desc )  

select top 1 c.customer_id , c.first_name ,  c.last_name ,
sum(il.unit_price*il.quantity) as total_spend
from customer c
join invoice i
on c.customer_id = i.customer_id
join invoice_line il 
on i.invoice_id  = il.invoice_id 
join track t
on il.track_id = t.track_id
join album al
on t.album_id = al.album_id
join artist a 
on al.artist_id = a.artist_id 
join best_selling_artist bsa
on a.artist_id = bsa.artist_id 
group by c.customer_id ,c.first_name , c.last_name ,bsa.total_earning
order by total_spend desc

/* Q2: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. */

/* Steps to Solve:  There are two parts in question- first most popular music genre and second need data at country level. */

/* Method 1: Using CTE */

with each_genre_sells_per_country as
(select g.genre_id , g.name ,i.billing_country ,  SUM(i.total ) as totals 
from genre g
join track t
on g.genre_id = t.track_id 
join invoice_line il
on t.track_id = il.track_id
join invoice i
on il.invoice_id = i.invoice_id 
group by g.genre_id , g.name , i.billing_country)
select i.billing_country , egspc.genre_id , egspc.name , 
MAX(egspc.totals) as total_spend
from each_genre_sells_per_country egspc
join track t
on egspc.genre_id = t.genre_id
join invoice_line il
on t.track_id = il.track_id 
join invoice i
on il.invoice_id = i.invoice_id
group by egspc.genre_id , egspc.name ,i.billing_country 
order by total_spend desc

/* Q3: Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */

/* Steps to Solve:  Similar to the above question. There are two parts in question- 
first find the most spent on music for each country and second filter the data for respective customers. */

/* Method 1: using CTE */
with customer_with_country as (select c.customer_id , c.first_name , c.last_name , i.billing_country , SUM(i.total) as totals , 
rank() over(partition by i.billing_country order by SUM(i.total) ) as ranks
from customer c
join invoice i
on c.customer_id = i.customer_id 
group by c.customer_id , c.first_name , c.last_name , i.billing_country)

select * from customer_with_country cwc
where cwc.ranks = 1

/* 2nd methoud */
select i.billing_country , c.customer_id , c.first_name , c.last_name , SUM(i.total ) from customer c
join invoice i
on c.customer_id = i.customer_id 
